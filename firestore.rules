
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isManager(groupId) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'Gestor do Grupo' &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId == groupId;
    }

    match /users/{userId} {
      // Allow a user to read their own profile, or allow a user to read profiles of users in the same group.
      allow read: if request.auth.uid == userId ||
                   (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId != null &&
                    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId == resource.data.groupId);

      // Allow a user to create/update their own profile.
      // Allow a manager to update the 'allowConfirmationWithDebt' field for a user in their group.
      allow write: if request.auth.uid == userId
                  || (isManager(resource.data.groupId) && request.resource.data.keys().hasOnly(['allowConfirmationWithDebt']));
    }

    match /groups/{groupId} {
      // Allow members of a group to read the group document.
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId == groupId;

      // Allow a manager to update their group.
      // Allow a new manager to create their group.
      allow write: if isManager(groupId) || (request.auth.uid == request.resource.data.managerId && request.resource.data.managerId == groupId);

      match /games/{gameId} {
        // Allow group members to read game data.
        allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId == groupId;

        match /attendees/{userId} {
           // Allow group members to read attendance data.
           allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId == groupId;
           // Allow a user to write ONLY to their own attendance document.
           allow write: if request.auth.uid == userId;
        }
      }
    }
  }
}
