
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can read user profiles (for player lists, etc.)
      allow read: if isAuth();

      // A user can create their own profile.
      allow create: if isOwner(userId);
      
      // A user can only update or delete their own profile.
      allow update, delete: if isOwner(userId);
    }

    // Rules for the 'groups' collection
    match /groups/{groupId} {
      // Any authenticated user can read group data (for group names, settings, etc.)
      allow read: if isAuth();
      
      // Allow creation if the new group's managerId matches the user's ID.
      allow create: if isAuth() && request.resource.data.managerId == request.auth.uid;

      // Allow update/delete if the existing group's managerId matches the user's ID.
      allow update, delete: if isAuth() && resource.data.managerId == request.auth.uid;
    }
  }
}
