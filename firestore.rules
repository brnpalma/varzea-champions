
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if request.auth != null &&
        (request.auth.uid == userId ||
         (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId != null &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId == resource.data.groupId));
      
      allow write: if request.auth != null &&
        // Allow creating their own document
        (request.resource.data.uid == request.auth.uid && !exists(/databases/$(database)/documents/users/$(request.auth.uid))) ||
        // Allow updating their own document
        (request.auth.uid == userId) ||
        // Allow a group manager to update a player in their group
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'Gestor do Grupo' &&
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId != null &&
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId == resource.data.groupId);
    }
    
    match /groups/{groupId} {
      allow read: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId == groupId;
      allow write: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'Gestor do Grupo' &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId == groupId;

      // Rule for games subcollection
      match /games/{gameId} {
        // Allow any group member to read game data
        allow read: if request.auth != null &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId == groupId;

        // Allow any authenticated user to write their own attendance status
        match /attendees/{userId} {
           allow read: if request.auth != null &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId == groupId;
           allow write: if request.auth != null && request.auth.uid == userId;
        }
      }
    }
  }
}
