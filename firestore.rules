
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function isGroupManager(groupId) {
      let group = get(/databases/$(database)/documents/groups/$(groupId)).data;
      return isSignedIn() && request.auth.uid == group.managerId;
    }

    function isMemberOfGroup(groupId) {
        return isSignedIn() && getUserData(request.auth.uid).groupId == groupId;
    }

    // USERS COLLECTION
    match /users/{userId} {
      // READ: 
      // 1. A user can read their own document.
      // 2. A user can read the documents of other users in the same group.
      allow read: if isUser(userId) || (isSignedIn() && getUserData(request.auth.uid).groupId != null && getUserData(request.auth.uid).groupId == resource.data.groupId);
      
      // CREATE: A user can create their own document when signing up.
      allow create: if isUser(userId);

      // UPDATE:
      // 1. A user can update their own profile data.
      // 2. A group manager can remove a player from a group (updating their groupId to null).
      allow update: if isUser(userId) || 
                       (isGroupManager(getUserData(userId).groupId) && request.resource.data.groupId == null);
                       
      // DELETE: Deleting user documents is disallowed to prevent data loss.
      allow delete: if false;
    }

    // GROUPS COLLECTION
    match /groups/{groupId} {
       // READ: Any authenticated member of the group can read the group document.
       allow read: if isMemberOfGroup(groupId);

       // CREATE: Only authenticated users can create a group (will be set as manager).
       allow create: if isSignedIn() && request.auth.uid == request.resource.data.managerId;
       
       // UPDATE: Only the manager of the group can update its settings.
       allow update: if isGroupManager(groupId);

       // DELETE: Deleting groups is disallowed for now to prevent accidental data loss.
       allow delete: if false;
    }
  }
}
