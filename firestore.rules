
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // METODOS
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isUserSelf(userId) {
      return request.auth.uid == userId;
    }

    function isManager(groupId) {
      // Garante que o documento do usuário exista antes de tentar acessar seus dados
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid));
      return userDoc != null && 
             userDoc.data.userType == "Gestor do Grupo" && 
             userDoc.data.groupId == groupId;
    }

    function isGuestGroup(groupId) {
      // Garante que o documento do usuário exista antes de tentar acessar seus dados
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid));
      return userDoc != null && userDoc.data.groupId == groupId;
    }

    //////////////////////////////////////////////////////////////

    match /users/{userId} {
      // Um usuário pode ler/escrever seu próprio perfil.
      // O gestor pode ler/escrever o perfil de um jogador do seu grupo.
      // Um jogador pode ler o perfil de outro jogador do mesmo grupo.
      allow read, write: if isUserAuthenticated() && (isUserSelf(userId) || isManager(get(/databases/$(database)/documents/users/$(userId)).data.groupId));
      allow create: if isUserAuthenticated();
    }

    match /groups/{groupId} {
      allow read: if isUserAuthenticated() && isGuestGroup(groupId);
      
      // Apenas o gestor pode criar, atualizar ou deletar o documento do grupo.
      allow create, update, delete: if isUserAuthenticated() && isManager(groupId);
                      
      match /games/{gameId} {
        allow read: if isUserAuthenticated() && isGuestGroup(groupId);
        
        match /attendees/{userId} {
          allow read: if isUserAuthenticated() && isGuestGroup(groupId);
          // Permite a escrita se o usuário for o gestor do grupo OU se for o próprio jogador.
          allow write: if isUserAuthenticated() && (isManager(groupId) || isUserSelf(userId));
        }
      }
      
      match /payments/{paymentId} {
        allow read, create: if isUserAuthenticated() && isManager(groupId);
      }
    }
  }
}
