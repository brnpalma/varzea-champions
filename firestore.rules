
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // METODOS
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isUserSelf(userId) {
      return request.auth.uid == userId;
    }
    
    function isManager(groupId) {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid));
      return userDoc.exists && userDoc.data.userType == "Gestor do Grupo" && userDoc.data.groupId == groupId;
    }

    function isMemberOfGroup(groupId) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId == groupId;
    }
//////////////////////////////////////////////////////////////

    match /users/{userId} {
      // Qualquer membro do grupo pode ler os dados de outros membros.
      // Apenas o próprio usuário ou o gestor do grupo podem escrever.
      allow read: if isUserAuthenticated() && isMemberOfGroup(resource.data.groupId);
      allow write: if isUserAuthenticated() && (isUserSelf(userId) || isManager(resource.data.groupId));
    }

    match /groups/{groupId} {
      // Permite a leitura do documento do grupo apenas para membros ou gestores.
      // Esta é a correção principal: a regra anterior era muito permissiva e não funcionava para subcoleções.
      allow read: if isUserAuthenticated() && (isManager(groupId) || isMemberOfGroup(groupId));
      
      // Permite criar, atualizar e deletar um grupo apenas se o usuário for o gestor.
      allow create, update, delete: if isUserAuthenticated() && isManager(groupId);
                      
      // Regra para a subcoleção de jogadores confirmados
      match /jogadoresConfirmados/{userId} {
          allow read, write: if isUserAuthenticated() && (isManager(groupId) || isMemberOfGroup(groupId));
      }
      
      // Regra para a subcoleção de pagamentos
      match /payments/{paymentId} {
        // Permite que gestores leiam e criem pagamentos.
        allow read, create: if isManager(groupId);
      }
    }
    
    match /assinaturas/{email} {
      allow read, write: if isUserAuthenticated() && request.auth.token.email == email;
    }
  }
}
