
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isUserAuthenticated() {
      return request.auth != null;
    }
    
    function isManager(groupId) {
      // Check if user document exists before accessing data
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid));
      return userDoc.exists && userDoc.data.userType == "Gestor do Grupo" && userDoc.data.groupId == groupId;
    }

    match /users/{userId} {
      allow read: if isUserAuthenticated() && 
                    (request.auth.uid == userId || 
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId == resource.data.groupId);

      allow write: if isUserAuthenticated() && 
                     (request.auth.uid == userId || 
                      (isManager(resource.data.groupId) && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['allowConfirmationWithDebt'])));
    }

    match /groups/{groupId} {
      // Allow any authenticated user to read group info (e.g., to validate an invite link)
      allow read: if isUserAuthenticated();
      allow write: if isUserAuthenticated() && 
                    (isManager(groupId) || (request.resource.data.managerId == request.auth.uid));
                      
      match /games/{gameId} {
        // Allow read for any group member
        allow read: if isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId == groupId;
        
        match /attendees/{userId} {
          allow read: if isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId == groupId;

          // Allow a user to write ONLY to their own attendee document
          allow write: if isUserAuthenticated() && request.auth.uid == userId;
        }
      }
    }
    
    // This rule is necessary for the collectionGroup query in the ranking page
    match /{path=**}/attendees/{attendeeId} {
        allow read: if isUserAuthenticated() && 
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId == resource.data.groupId;
    }
  }
}
