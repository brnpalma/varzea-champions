
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user belongs to a specific group
    function isGroupMember(groupId) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId == groupId;
    }
    
    // Groups collection
    match /groups/{groupId} {
      allow read: if isGroupMember(groupId);
      allow write: if request.auth.uid == resource.data.managerId; // Only group manager can write
    }

    // Users collection
    match /users/{userId} {
      allow read: if request.auth.uid == userId || 
                   (isGroupMember(get(/databases/$(database)/documents/users/$(userId)).data.groupId) && 
                    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId != null);
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
      allow delete: if request.auth.uid == userId;
    }

    // Game attendees subcollection
    match /groups/{groupId}/games/{gameId}/attendees/{userId} {
      allow read: if isGroupMember(groupId);
      // Allow user to confirm/decline their own presence or update their goals
      allow write: if request.auth.uid == userId && isGroupMember(groupId);
    }
  }
}
