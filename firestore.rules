rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Regra para obter dados do grupo
    match /groups/{groupId} {
      allow read: if request.auth != null;
    }

    // Regras de acesso para documentos de usuários
    match /users/{userId} {
      // Qualquer usuário autenticado pode ler os dados de outro usuário.
      allow read: if request.auth != null;

      // Um usuário pode criar seu próprio perfil.
      allow create: if request.auth.uid == userId;

      // Um usuário pode atualizar seu próprio perfil.
      allow update: if request.auth.uid == userId;

      // Um gestor de grupo pode remover um jogador do seu grupo (atualizando o groupId).
      allow update: if 
          // O campo que está sendo atualizado é APENAS o 'groupId'.
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['groupId']) &&
          // O gestor está autenticado.
          request.auth != null &&
          // O documento do gestor existe.
          exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
          // O gestor é do tipo 'Gestor do Grupo'.
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'Gestor do Grupo' &&
          // O jogador que está sendo removido pertence ao mesmo grupo do gestor.
          resource.data.groupId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId;
    }

    // Regras para jogos e participantes
    match /groups/{groupId}/games/{gameId}/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    // Regras para pagamentos
    match /groups/{groupId}/payments/{paymentId} {
        allow read, write: if 
            // O usuário deve estar autenticado.
            request.auth != null &&
            // O documento do usuário que está fazendo a requisição deve existir.
            exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
            // O usuário deve ser um gestor do grupo ao qual o pagamento pertence.
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'Gestor do Grupo' &&
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.groupId == groupId;
    }
  }
}
