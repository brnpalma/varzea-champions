
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if the requesting user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow a user to create their own profile document.
      // Allow a user to read and update their own profile.
      // Allow a user to delete their own document.
      allow read, update, delete: if isAuthenticated() && isOwner(userId);
      allow create: if isAuthenticated();
      
      // Allow any authenticated user to read other users' profiles (e.g., for player lists)
      allow list: if isAuthenticated();
    }
    
    // Rules for the 'groups' collection
    match /groups/{groupId} {
      // Any authenticated user can read group info (like name, game days).
      allow get: if isAuthenticated();

      // Only the group manager (whose UID matches the group ID) can update or delete the group.
      allow update, delete: if isAuthenticated() && isOwner(groupId);

      // A user can create a group if they are authenticated and are creating it for themselves.
      allow create: if isAuthenticated() && isOwner(groupId);
      
      // Rules for the 'games' subcollection
      match /games/{gameId} {
        
        // Rules for the 'attendees' subcollection
        match /attendees/{userId} {
          // Allow read access to attendees list for any authenticated user.
          // In a more complex app, we might restrict this to group members only.
          // For now, any authenticated user can see who is confirmed.
          allow read: if isAuthenticated();
          
          // A user can only confirm/decline their own presence.
          allow create, update: if isAuthenticated() && isOwner(userId);
        }
      }
    }
  }
}
